"0","otherMeta = read.csv(""./Data/AP/Root_meta_data_parafac.txt"", sep=""\t"") %>% as_tibble() %>% select(-Gender)"
"0","timepoints = c(-6, -3, 0, 1, 6, 13)"
"0",""
"0","normalSubjectLoadings = prepMode1 %>% as_tibble() %>% left_join(cytokines_meta_data) %>% left_join(otherMeta,by=""SubjectID"")"
"1","[38;5;255mJoining with `by = join_by(SubjectID)`[39m
"
"2","Warning in left_join(., otherMeta, by = ""SubjectID"") :"
"2","
 "
"2"," [38;5;255mDetected an unexpected many-to-many relationship between `x` and `y`.
[36mâ„¹[38;5;255m Row 1 of `x` matches multiple rows in `y`.
[36mâ„¹[38;5;255m Row 11 of `y` matches multiple rows in `x`.
[36mâ„¹[38;5;255m If a many-to-many relationship is expected, set `relationship = ""many-to-many""` to silence this warning.[39m
"
"0","uncorrectedP = matrix(NA, nrow=1, ncol=4)"
"0",""
"0","# Gender"
"0","uncorrectedP[1,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender==""M"") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(Gender==""F"") %>% select(Component_1) %>% pull())$p.value"
"0","# uncorrectedP[2,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender==""M"") %>% select(Component_2) %>% pull(), normalSubjectLoadings %>% filter(Gender==""F"") %>% select(Component_2) %>% pull())$p.value"
"0",""
"0","# Age"
"0","uncorrectedP[1,2] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$Age.x)$p.value"
"0","# uncorrectedP[2,2] = cor.test(normalSubjectLoadings$Component_2, normalSubjectLoadings$Age)$p.value"
"0",""
"0","# DMFT"
"0","uncorrectedP[1,3] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$DMFT)$p.value"
"0","# uncorrectedP[2,3] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$DMFT)$p.value"
"0",""
"0","# pain-noPain"
"0","uncorrectedP[1,4] = wilcox.test(normalSubjectLoadings %>% filter(PainS_NopainA.x==""Symptomatic"") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(PainS_NopainA.x==""Asymptomatic"") %>% select(Component_1) %>% pull())$p.value"
"0","# uncorrectedP[2,4] = wilcox.test(normalSubjectLoadings %>% filter(PainS_NopainA==""S"") %>% select(Component_2) %>% pull(), normalSubjectLoadings %>% filter(PainS_NopainA==""A"") %>% select(Component_2) %>% pull())$p.value"
"0",""
"0","print(uncorrectedP)"
"1","    "
"1","        [,1]"
"1","      [,2]"
"1","      [,3]"
"1","        [,4]"
"1","
[1,]"
"1"," 0.009925299"
"1"," 0.1038892"
"1"," 0.1603079"
"1"," 1.35231e-19"
"1","
"
"0","correctedP = matrix(p.adjust(uncorrectedP, ""BH""), nrow=1, ncol=4)"
"0","print(correctedP)"
"1","    "
"1","      [,1]"
"1","     [,2]"
"1","      [,3]"
"1","         [,4]"
"1","
[1,]"
"1"," 0.0198506"
"1"," 0.138519"
"1"," 0.1603079"
"1"," 5.409241e-19"
"1","
"
