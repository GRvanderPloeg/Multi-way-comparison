# Load microbiome data - these are case only by default
microbiome_raw = read.csv("./Data/AP/20240429_microbiome_counts.csv", sep=" ", header=FALSE)
taxonomy = read.csv("./Data/AP/20240429_taxonomy.csv", sep=" ", header=FALSE)
subjectMeta2 = read.csv("./Data/AP/20240429_microbiome_sampleMeta.csv", sep=" ", header=FALSE)
# Remove extra samples
remove = c("A11-18", "A11-3", "A11-8 36", "A11-10 17", "A11-15 17") # last is new: "A11-8 46"
mask = !(subjectMeta2[,3] %in% remove)
microbiome_raw = microbiome_raw[mask,]
subjectMeta2 = subjectMeta2[mask,]
# Select ASVs based on sparsity per group
sparsityThreshold = 0.5
maskA = subjectMeta2[,4] == "A"
maskS = subjectMeta2[,4] == "S"
microbiomeA = microbiome_raw[maskA,]
microbiomeS = microbiome_raw[maskS,]
sparsityA = colSums(microbiomeA==0) / nrow(microbiomeA)
sparsityS = colSums(microbiomeS==0) / nrow(microbiomeS)
featureMask = (sparsityA <= sparsityThreshold) | (sparsityS <= sparsityThreshold)
# CLR transformation
geomeans = pracma::geomean(as.matrix(microbiome_raw+1), dim=2)
microbiome_clr = log(sweep(microbiome_raw+1, 1, geomeans, FUN="/"))
# Reduce to previously selected ASVs
microbiome_selected = microbiome_clr[,featureMask]
taxonomy_selected = taxonomy[featureMask,]
# Center and scale
microbiome_cnt = sweep(microbiome_selected, 2, colMeans(microbiome_selected), FUN="-")
microbiome_cnt_scl = sweep(microbiome_cnt, 2, apply(microbiome_cnt, 2, sd), FUN="/")
saveRDS(microbiome_cnt_scl, "./Data/AP/microbiome_homogenized.RDS")
saveRDS(taxonomy_selected, "./Data/AP/taxonomy_homogenized.RDS")
# all.equal(processedGeorgiou$mode1$SubjectID, subjectMeta2$V2)
# TRUE
all.equal(processedGeorgiou$mode1$SubjectID, subjectMeta2$V2)
processedGeorgiou$data %>% dim
processedGeorgiou$data[1:10,1:10,1]
microbiome_cnt_scl %>% dim
microbiome_cnt_scl[1:10,1:10]
library(phyloseq)
library(tidyverse)
library(vegan)
library(ape)
library(ggpubr)
library(ggplot2)
library(parafac4microbiome)
library(CMTFtoolbox)
# Load data
cytokines_data = read.csv("./Data/AP/input_deduplicated_RvdP.csv", sep=" ", header=FALSE) %>% as_tibble()
colnames(cytokines_data) = c("VEGF", "CRP", "GM-CSF", "IL1alpha", "IL1beta", "IL4", "IL6", "IL8", "IL10", "IL12p70", "IL17A", "IFNgamma", "MIP1alpha", "OPG", "TNFalpha", "RANKL")
cytokines_meta_data = read.csv("./Data/AP/input_deduplicated_metadata_RvdP.csv", sep=" ", header=FALSE) %>% as_tibble()
colnames(cytokines_meta_data) = c("SubjectID", "Visit", "Gender", "Age", "Pain_noPain", "case_control")
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
# Put into cube
I = 52
J = 16
K = 6
cube = array(0L, dim=c(I,J,K))
for(k in 1:K){
temp = cbind(cytokines_data, cytokines_meta_data) %>% as_tibble()
cube[,,k] = temp %>%
filter(Visit == k) %>%
right_join(cytokines_meta_data %>% select(SubjectID) %>% unique()) %>%
arrange(SubjectID) %>%
select(-all_of(colnames(cytokines_meta_data))) %>%
as.matrix()
}
# Take log + pseudovalue
cube = log(cube+0.0050)
# Filter to case only
temp = cytokines_meta_data %>% select(-Visit) %>% unique() %>% arrange(SubjectID)
processedGeorgiou = list()
processedGeorgiou$mode1 = temp %>% left_join(otherMeta %>% select(SubjectID, PainS_NopainA) %>% unique())
processedGeorgiou$mode2 = colnames(cytokines_data) %>% as_tibble()
processedGeorgiou$mode3 = cytokines_meta_data %>% select(Visit) %>% arrange(Visit) %>% unique() %>% mutate(extraction = c(rep("Before extraction",3), rep("After extraction",3)))
processedGeorgiou$data = cube
# Center and scale
processedGeorgiou$data = multiwayCenter(processedGeorgiou$data, mode=1)
processedGeorgiou$data = multiwayScale(processedGeorgiou$data, mode=2)
saveRDS(processedGeorgiou, "./Data/AP/cytokines_processed.RDS")
library(phyloseq)
library(tidyverse)
library(vegan)
library(ape)
library(ggpubr)
library(ggplot2)
library(parafac4microbiome)
library(CMTFtoolbox)
# Load data
cytokines_data = read.csv("./Data/AP/input_deduplicated_RvdP.csv", sep=" ", header=FALSE) %>% as_tibble()
colnames(cytokines_data) = c("VEGF", "CRP", "GM-CSF", "IL1alpha", "IL1beta", "IL4", "IL6", "IL8", "IL10", "IL12p70", "IL17A", "IFNgamma", "MIP1alpha", "OPG", "TNFalpha", "RANKL")
cytokines_meta_data = read.csv("./Data/AP/input_deduplicated_metadata_RvdP.csv", sep=" ", header=FALSE) %>% as_tibble()
colnames(cytokines_meta_data) = c("SubjectID", "Visit", "Gender", "Age", "Pain_noPain", "case_control")
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
# Put into cube
I = 52
J = 16
K = 6
cube = array(0L, dim=c(I,J,K))
for(k in 1:K){
temp = cbind(cytokines_data, cytokines_meta_data) %>% as_tibble()
cube[,,k] = temp %>%
filter(Visit == k) %>%
right_join(cytokines_meta_data %>% select(SubjectID) %>% unique()) %>%
arrange(SubjectID) %>%
select(-all_of(colnames(cytokines_meta_data))) %>%
as.matrix()
}
# Take log + pseudovalue
cube = log(cube+0.0050)
# Filter to case only
temp = cytokines_meta_data %>% select(-Visit) %>% unique() %>% arrange(SubjectID)
caseMask = temp$case_control=="case"
processedGeorgiou = list()
processedGeorgiou$mode1 = temp[caseMask,] %>% left_join(otherMeta %>% select(SubjectID, PainS_NopainA) %>% unique())
processedGeorgiou$mode2 = colnames(cytokines_data) %>% as_tibble()
processedGeorgiou$mode3 = cytokines_meta_data %>% select(Visit) %>% arrange(Visit) %>% unique() %>% mutate(extraction = c(rep("Before extraction",3), rep("After extraction",3)))
processedGeorgiou$data = cube[caseMask,,]
# Remove extra samples
remove = c("A11-18", "A11-3") # first two are from paper, last is new: "A11-8"
mask2 = !(processedGeorgiou$mode1$SubjectID %in% remove)
processedGeorgiou$data = processedGeorgiou$data[mask2,,]
processedGeorgiou$mode1 = processedGeorgiou$mode1[mask2,]
# Center and scale
processedGeorgiou$data = multiwayCenter(processedGeorgiou$data, mode=1)
processedGeorgiou$data = multiwayScale(processedGeorgiou$data, mode=2)
saveRDS(processedGeorgiou, "./Data/AP/cytokines_homogenized.RDS")
# Load microbiome data - these are case only by default
microbiome_raw = read.csv("./Data/AP/20240429_microbiome_counts.csv", sep=" ", header=FALSE)
taxonomy = read.csv("./Data/AP/20240429_taxonomy.csv", sep=" ", header=FALSE)
subjectMeta2 = read.csv("./Data/AP/20240429_microbiome_sampleMeta.csv", sep=" ", header=FALSE)
# Remove extra samples
remove = c("A11-18", "A11-3", "A11-8 36", "A11-10 17", "A11-15 17") # last is new: "A11-8 46"
mask = !(subjectMeta2[,3] %in% remove)
microbiome_raw = microbiome_raw[mask,]
subjectMeta2 = subjectMeta2[mask,]
# Select ASVs based on sparsity per group
sparsityThreshold = 0.5
maskA = subjectMeta2[,4] == "A"
maskS = subjectMeta2[,4] == "S"
microbiomeA = microbiome_raw[maskA,]
microbiomeS = microbiome_raw[maskS,]
sparsityA = colSums(microbiomeA==0) / nrow(microbiomeA)
sparsityS = colSums(microbiomeS==0) / nrow(microbiomeS)
featureMask = (sparsityA <= sparsityThreshold) | (sparsityS <= sparsityThreshold)
# CLR transformation
geomeans = pracma::geomean(as.matrix(microbiome_raw+1), dim=2)
microbiome_clr = log(sweep(microbiome_raw+1, 1, geomeans, FUN="/"))
# Reduce to previously selected ASVs
microbiome_selected = microbiome_clr[,featureMask]
taxonomy_selected = taxonomy[featureMask,]
# Center and scale
microbiome_cnt = sweep(microbiome_selected, 2, colMeans(microbiome_selected), FUN="-")
microbiome_cnt_scl = sweep(microbiome_cnt, 2, apply(microbiome_cnt, 2, sd), FUN="/")
saveRDS(microbiome_cnt_scl, "./Data/AP/microbiome_homogenized.RDS")
saveRDS(taxonomy_selected, "./Data/AP/taxonomy_homogenized.RDS")
# all.equal(processedGeorgiou$mode1$SubjectID, subjectMeta2$V2)
# TRUE
library(ggplot2)
library(parafac4microbiome)
processedGeorgiou = readRDS("./Data/AP/cytokines_processed.RDS")
result = parafac4microbiome::assessModelQuality(processedGeorgiou$data, numRepetitions=10, numCores=parallel::detectCores())
result$plots$overview
# result = parafac4microbiome::assessModelQuality(processedGeorgiou$data, numRepetitions=10, numCores=parallel::detectCores())
# result$plots$overview
result2 = parafac4microbiome::assessModelStability(processedGeorgiou, maxNumComponent=3, numFolds=10)
result2$FMSplot
result2$modelPlots[[2]]
result2$modelPlots[[3]]
library(phyloseq)
library(tidyverse)
library(vegan)
library(ape)
library(ggpubr)
library(ggplot2)
library(parafac4microbiome)
library(CMTFtoolbox)
# Load data
cytokines_data = read.csv("./Data/AP/input_deduplicated_RvdP.csv", sep=" ", header=FALSE) %>% as_tibble()
colnames(cytokines_data) = c("VEGF", "CRP", "GM-CSF", "IL1alpha", "IL1beta", "IL4", "IL6", "IL8", "IL10", "IL12p70", "IL17A", "IFNgamma", "MIP1alpha", "OPG", "TNFalpha", "RANKL")
cytokines_meta_data = read.csv("./Data/AP/input_deduplicated_metadata_RvdP.csv", sep=" ", header=FALSE) %>% as_tibble()
colnames(cytokines_meta_data) = c("SubjectID", "Visit", "Gender", "Age", "Pain_noPain", "case_control")
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
# Put into cube
I = 52
J = 16
K = 6
cube = array(0L, dim=c(I,J,K))
for(k in 1:K){
temp = cbind(cytokines_data, cytokines_meta_data) %>% as_tibble()
cube[,,k] = temp %>%
filter(Visit == k) %>%
right_join(cytokines_meta_data %>% select(SubjectID) %>% unique()) %>%
arrange(SubjectID) %>%
select(-all_of(colnames(cytokines_meta_data))) %>%
as.matrix()
}
# Take log + pseudovalue
cube = log(cube+0.0050)
# Filter to case only
temp = cytokines_meta_data %>% select(-Visit) %>% unique() %>% arrange(SubjectID)
processedGeorgiou = list()
processedGeorgiou$mode1 = temp %>% left_join(otherMeta %>% select(SubjectID, PainS_NopainA) %>% unique())
processedGeorgiou$mode2 = colnames(cytokines_data) %>% as_tibble()
processedGeorgiou$mode3 = cytokines_meta_data %>% select(Visit) %>% arrange(Visit) %>% unique() %>% mutate(extraction = c(rep("Before extraction",3), rep("After extraction",3)))
processedGeorgiou$data = cube
# Center and scale
processedGeorgiou$data = multiwayCenter(processedGeorgiou$data, mode=1)
processedGeorgiou$data = multiwayScale(processedGeorgiou$data, mode=2)
saveRDS(processedGeorgiou, "./Data/AP/cytokines_processed.RDS")
library(phyloseq)
library(tidyverse)
library(vegan)
library(ape)
library(ggpubr)
library(ggplot2)
library(parafac4microbiome)
library(CMTFtoolbox)
# Load data
cytokines_data = read.csv("./Data/AP/input_deduplicated_RvdP.csv", sep=" ", header=FALSE) %>% as_tibble()
colnames(cytokines_data) = c("VEGF", "CRP", "GM-CSF", "IL1alpha", "IL1beta", "IL4", "IL6", "IL8", "IL10", "IL12p70", "IL17A", "IFNgamma", "MIP1alpha", "OPG", "TNFalpha", "RANKL")
cytokines_meta_data = read.csv("./Data/AP/input_deduplicated_metadata_RvdP.csv", sep=" ", header=FALSE) %>% as_tibble()
colnames(cytokines_meta_data) = c("SubjectID", "Visit", "Gender", "Age", "Pain_noPain", "case_control")
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
# Put into cube
I = 52
J = 16
K = 6
cube = array(0L, dim=c(I,J,K))
for(k in 1:K){
temp = cbind(cytokines_data, cytokines_meta_data) %>% as_tibble()
cube[,,k] = temp %>%
filter(Visit == k) %>%
right_join(cytokines_meta_data %>% select(SubjectID) %>% unique()) %>%
arrange(SubjectID) %>%
select(-all_of(colnames(cytokines_meta_data))) %>%
as.matrix()
}
# Take log + pseudovalue
cube = log(cube+0.0050)
# Filter to case only
temp = cytokines_meta_data %>% select(-Visit) %>% unique() %>% arrange(SubjectID)
caseMask = temp$case_control=="case"
processedGeorgiou = list()
processedGeorgiou$mode1 = temp[caseMask,] %>% left_join(otherMeta %>% select(SubjectID, PainS_NopainA) %>% unique())
processedGeorgiou$mode2 = colnames(cytokines_data) %>% as_tibble()
processedGeorgiou$mode3 = cytokines_meta_data %>% select(Visit) %>% arrange(Visit) %>% unique() %>% mutate(extraction = c(rep("Before extraction",3), rep("After extraction",3)))
processedGeorgiou$data = cube[caseMask,,]
# Remove extra samples
remove = c("A11-18", "A11-3", "A11-8") # first two are from paper, last is new
mask2 = !(processedGeorgiou$mode1$SubjectID %in% remove)
processedGeorgiou$data = processedGeorgiou$data[mask2,,]
processedGeorgiou$mode1 = processedGeorgiou$mode1[mask2,]
# Center and scale
processedGeorgiou$data = multiwayCenter(processedGeorgiou$data, mode=1)
processedGeorgiou$data = multiwayScale(processedGeorgiou$data, mode=2)
saveRDS(processedGeorgiou, "./Data/AP/cytokines_homogenized.RDS")
# Load microbiome data - these are case only by default
microbiome_raw = read.csv("./Data/AP/20240429_microbiome_counts.csv", sep=" ", header=FALSE)
taxonomy = read.csv("./Data/AP/20240429_taxonomy.csv", sep=" ", header=FALSE)
subjectMeta2 = read.csv("./Data/AP/20240429_microbiome_sampleMeta.csv", sep=" ", header=FALSE)
# Remove extra samples
remove = c("A11-18", "A11-3", "A11-8 36", "A11-10 17", "A11-15 17", "A11-8 46") # last is new
mask = !(subjectMeta2[,3] %in% remove)
microbiome_raw = microbiome_raw[mask,]
subjectMeta2 = subjectMeta2[mask,]
# Select ASVs based on sparsity per group
sparsityThreshold = 0.5
maskA = subjectMeta2[,4] == "A"
maskS = subjectMeta2[,4] == "S"
microbiomeA = microbiome_raw[maskA,]
microbiomeS = microbiome_raw[maskS,]
sparsityA = colSums(microbiomeA==0) / nrow(microbiomeA)
sparsityS = colSums(microbiomeS==0) / nrow(microbiomeS)
featureMask = (sparsityA <= sparsityThreshold) | (sparsityS <= sparsityThreshold)
# CLR transformation
geomeans = pracma::geomean(as.matrix(microbiome_raw+1), dim=2)
microbiome_clr = log(sweep(microbiome_raw+1, 1, geomeans, FUN="/"))
# Reduce to previously selected ASVs
microbiome_selected = microbiome_clr[,featureMask]
taxonomy_selected = taxonomy[featureMask,]
# Center and scale
microbiome_cnt = sweep(microbiome_selected, 2, colMeans(microbiome_selected), FUN="-")
microbiome_cnt_scl = sweep(microbiome_cnt, 2, apply(microbiome_cnt, 2, sd), FUN="/")
saveRDS(microbiome_cnt_scl, "./Data/AP/microbiome_homogenized.RDS")
saveRDS(taxonomy_selected, "./Data/AP/taxonomy_homogenized.RDS")
# all.equal(processedGeorgiou$mode1$SubjectID, subjectMeta2$V2)
# TRUE
library(ggplot2)
library(parafac4microbiome)
processedGeorgiou = readRDS("./Data/AP/cytokines_processed.RDS")
result = parafac4microbiome::assessModelQuality(processedGeorgiou$data, numRepetitions=10, numCores=parallel::detectCores())
result$plots$overview
result2 = parafac4microbiome::assessModelStability(processedGeorgiou, maxNumComponent=3, numFolds=10)
result2$modelPlots[[2]]
result2$modelPlots[[3]]
cytokine_parafac = parafac4microbiome::parafac(processedGeorgiou$data, nfac=2, nstart=100)
cytokine_parafac$Fac[[1]]
processedGeorgiou$mode1
processedGeorgiou$mode1 %>% View
library(phyloseq)
library(tidyverse)
library(vegan)
library(ape)
library(ggpubr)
library(ggplot2)
library(parafac4microbiome)
library(CMTFtoolbox)
# Load data
cytokines_data = read.csv("./Data/AP/input_deduplicated_RvdP.csv", sep=" ", header=FALSE) %>% as_tibble()
colnames(cytokines_data) = c("VEGF", "CRP", "GM-CSF", "IL1alpha", "IL1beta", "IL4", "IL6", "IL8", "IL10", "IL12p70", "IL17A", "IFNgamma", "MIP1alpha", "OPG", "TNFalpha", "RANKL")
cytokines_meta_data = read.csv("./Data/AP/input_deduplicated_metadata_RvdP.csv", sep=" ", header=FALSE) %>% as_tibble()
colnames(cytokines_meta_data) = c("SubjectID", "Visit", "Gender", "Age", "Pain_noPain", "case_control")
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
# Put into cube
I = 52
J = 16
K = 6
cube = array(0L, dim=c(I,J,K))
for(k in 1:K){
temp = cbind(cytokines_data, cytokines_meta_data) %>% as_tibble()
cube[,,k] = temp %>%
filter(Visit == k) %>%
right_join(cytokines_meta_data %>% select(SubjectID) %>% unique()) %>%
arrange(SubjectID) %>%
select(-all_of(colnames(cytokines_meta_data))) %>%
as.matrix()
}
# Take log + pseudovalue
cube = log(cube+0.0050)
# Remove outlier A11-8
temp = cytokines_meta_data %>% select(-Visit) %>% unique() %>% arrange(SubjectID)
# Remove extra samples
remove = c("A11-8") # first two are from paper, last is new
mask2 = !(processedGeorgiou$mode1$SubjectID %in% remove)
processedGeorgiou$data = processedGeorgiou$data[mask2,,]
processedGeorgiou$mode1 = processedGeorgiou$mode1[mask2,]
processedGeorgiou = list()
processedGeorgiou$mode1 = temp[mask2,] %>% left_join(otherMeta %>% select(SubjectID, PainS_NopainA) %>% unique())
processedGeorgiou$mode2 = colnames(cytokines_data) %>% as_tibble()
processedGeorgiou$mode3 = cytokines_meta_data %>% select(Visit) %>% arrange(Visit) %>% unique() %>% mutate(extraction = c(rep("Before extraction",3), rep("After extraction",3)))
processedGeorgiou$data = cube[mask2,,]
# Center and scale
processedGeorgiou$data = multiwayCenter(processedGeorgiou$data, mode=1)
processedGeorgiou$data = multiwayScale(processedGeorgiou$data, mode=2)
saveRDS(processedGeorgiou, "./Data/AP/cytokines_processed.RDS")
library(ggplot2)
library(parafac4microbiome)
processedGeorgiou = readRDS("./Data/AP/cytokines_processed.RDS")
result = parafac4microbiome::assessModelQuality(processedGeorgiou$data, numRepetitions=10, numCores=parallel::detectCores())
result$plots$overview
# result = parafac4microbiome::assessModelQuality(processedGeorgiou$data, numRepetitions=10, numCores=parallel::detectCores())
# result$plots$overview
# result2 = parafac4microbiome::assessModelStability(processedGeorgiou, maxNumComponent=3, numFolds=10)
cytokine_parafac = parafac4microbiome::parafac(processedGeorgiou$data, nfac=2, nstart=100)
saveRDS(cytokine_parafac, "./Models/PARAFAC/AP_cytokine_parafac.RDS")
cytokine_parafac = readRDS("./Models/PARAFAC/AP_cytokine_parafac.RDS")
prepMode1 = processedGeorgiou$mode1 %>% mutate(Component_1 = cytokine_parafac$Fac[[1]][,1], Component_2 = cytokine_parafac$Fac[[1]][,2]) %>% arrange(PainS_NopainA, SubjectID) %>% mutate(index=1:nrow(.))
prepMode2 = processedGeorgiou$mode2 %>% mutate(Component_1 = cytokine_parafac$Fac[[2]][,1], Component_2 = cytokine_parafac$Fac[[2]][,2]) %>% arrange(value) %>% mutate(index=1:nrow(.))
a = prepMode1 %>% ggplot(aes(x=index,y=Component_1,fill=as.factor(PainS_NopainA))) + geom_bar(stat="identity")
b = prepMode2 %>% ggplot(aes(x=as.factor(value),y=Component_1)) + geom_bar(stat="identity")
c = cytokine_parafac$Fac[[3]] %>% as_tibble() %>% mutate(visit = 1:6) %>% ggplot(aes(x=visit,y=V1)) + geom_line() + geom_point()
d = prepMode1 %>% ggplot(aes(x=index,y=Component_2,fill=as.factor(PainS_NopainA))) + geom_bar(stat="identity")
e = prepMode2 %>% ggplot(aes(x=as.factor(value),y=Component_2)) + geom_bar(stat="identity")
f = cytokine_parafac$Fac[[3]] %>% as_tibble() %>% mutate(visit = 1:6) %>% ggplot(aes(x=visit,y=V2)) + geom_line() + geom_point()
ggarrange(a,b,c,d,e,f,nrow=2,ncol=3)
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
timepoints = c(-6, -3, 0, 1, 6, 13)
normalSubjectLoadings = prepMode1 %>% as_tibble() %>% left_join(otherMeta)
uncorrectedP = matrix(NA, nrow=2, ncol=4)
# Gender
uncorrectedP[1,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender=="M") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(Gender=="F") %>% select(Component_1) %>% pull())$p.value
uncorrectedP[2,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender=="M") %>% select(Component_2) %>% pull(), normalSubjectLoadings %>% filter(Gender=="F") %>% select(Component_2) %>% pull())$p.value
# Age
uncorrectedP[1,2] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$Age)$p.value
uncorrectedP[2,2] = cor.test(normalSubjectLoadings$Component_2, normalSubjectLoadings$Age)$p.value
# DMFT
uncorrectedP[1,3] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$DMFT)$p.value
uncorrectedP[2,3] = cor.test(normalSubjectLoadings$Component_2, normalSubjectLoadings$DMFT)$p.value
# pain-noPain
uncorrectedP[1,4] = wilcox.test(normalSubjectLoadings %>% filter(PainS_NopainA=="S") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(PainS_NopainA=="A") %>% select(Component_1) %>% pull())$p.value
uncorrectedP[2,4] = wilcox.test(normalSubjectLoadings %>% filter(PainS_NopainA=="S") %>% select(Component_2) %>% pull(), normalSubjectLoadings %>% filter(PainS_NopainA=="A") %>% select(Component_2) %>% pull())$p.value
print(uncorrectedP)
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=2, ncol=4)
print(correctedP)
cytokine_parafac$varExp
library(phyloseq)
library(tidyverse)
library(vegan)
library(ape)
library(ggpubr)
library(ggplot2)
library(parafac4microbiome)
library(CMTFtoolbox)
# Load data
cytokines_data = read.csv("./Data/AP/input_deduplicated_RvdP.csv", sep=" ", header=FALSE) %>% as_tibble()
colnames(cytokines_data) = c("VEGF", "CRP", "GM-CSF", "IL1alpha", "IL1beta", "IL4", "IL6", "IL8", "IL10", "IL12p70", "IL17A", "IFNgamma", "MIP1alpha", "OPG", "TNFalpha", "RANKL")
cytokines_meta_data = read.csv("./Data/AP/input_deduplicated_metadata_RvdP.csv", sep=" ", header=FALSE) %>% as_tibble()
colnames(cytokines_meta_data) = c("SubjectID", "Visit", "Gender", "Age", "Pain_noPain", "case_control")
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
# Put into cube
I = 52
J = 16
K = 6
cube = array(0L, dim=c(I,J,K))
for(k in 1:K){
temp = cbind(cytokines_data, cytokines_meta_data) %>% as_tibble()
cube[,,k] = temp %>%
filter(Visit == k) %>%
right_join(cytokines_meta_data %>% select(SubjectID) %>% unique()) %>%
arrange(SubjectID) %>%
select(-all_of(colnames(cytokines_meta_data))) %>%
as.matrix()
}
# Take log + pseudovalue
cube = log(cube+0.0050)
# Filter to case only
temp = cytokines_meta_data %>% select(-Visit) %>% unique() %>% arrange(SubjectID)
caseMask = temp$case_control=="case"
processedGeorgiou = list()
processedGeorgiou$mode1 = temp[caseMask,] %>% left_join(otherMeta %>% select(SubjectID, PainS_NopainA) %>% unique())
processedGeorgiou$mode2 = colnames(cytokines_data) %>% as_tibble()
processedGeorgiou$mode3 = cytokines_meta_data %>% select(Visit) %>% arrange(Visit) %>% unique() %>% mutate(extraction = c(rep("Before extraction",3), rep("After extraction",3)))
processedGeorgiou$data = cube[caseMask,,]
# Remove extra samples
remove = c("A11-18", "A11-3") # first two are from paper, last is new: "A11-8"
mask2 = !(processedGeorgiou$mode1$SubjectID %in% remove)
processedGeorgiou$data = processedGeorgiou$data[mask2,,]
processedGeorgiou$mode1 = processedGeorgiou$mode1[mask2,]
# Center and scale
processedGeorgiou$data = multiwayCenter(processedGeorgiou$data, mode=1)
processedGeorgiou$data = multiwayScale(processedGeorgiou$data, mode=2)
saveRDS(processedGeorgiou, "./Data/AP/cytokines_homogenized.RDS")
# Load microbiome data - these are case only by default
microbiome_raw = read.csv("./Data/AP/20240429_microbiome_counts.csv", sep=" ", header=FALSE)
taxonomy = read.csv("./Data/AP/20240429_taxonomy.csv", sep=" ", header=FALSE)
subjectMeta2 = read.csv("./Data/AP/20240429_microbiome_sampleMeta.csv", sep=" ", header=FALSE)
# Remove extra samples
remove = c("A11-18", "A11-3", "A11-8 36", "A11-10 17", "A11-15 17") # last is new: "A11-8 46"
mask = !(subjectMeta2[,3] %in% remove)
microbiome_raw = microbiome_raw[mask,]
subjectMeta2 = subjectMeta2[mask,]
# Select ASVs based on sparsity per group
sparsityThreshold = 0.5
maskA = subjectMeta2[,4] == "A"
maskS = subjectMeta2[,4] == "S"
microbiomeA = microbiome_raw[maskA,]
microbiomeS = microbiome_raw[maskS,]
sparsityA = colSums(microbiomeA==0) / nrow(microbiomeA)
sparsityS = colSums(microbiomeS==0) / nrow(microbiomeS)
featureMask = (sparsityA <= sparsityThreshold) | (sparsityS <= sparsityThreshold)
# CLR transformation
geomeans = pracma::geomean(as.matrix(microbiome_raw+1), dim=2)
microbiome_clr = log(sweep(microbiome_raw+1, 1, geomeans, FUN="/"))
# Reduce to previously selected ASVs
microbiome_selected = microbiome_clr[,featureMask]
taxonomy_selected = taxonomy[featureMask,]
# Center and scale
microbiome_cnt = sweep(microbiome_selected, 2, colMeans(microbiome_selected), FUN="-")
microbiome_cnt_scl = sweep(microbiome_cnt, 2, apply(microbiome_cnt, 2, sd), FUN="/")
saveRDS(microbiome_cnt_scl, "./Data/AP/microbiome_homogenized.RDS")
saveRDS(taxonomy_selected, "./Data/AP/taxonomy_homogenized.RDS")
# all.equal(processedGeorgiou$mode1$SubjectID, subjectMeta2$V2)
# TRUE
library(phyloseq)
library(tidyverse)
library(vegan)
library(ape)
library(ggpubr)
processedGeorgiou = readRDS("./Data/AP/cytokines_processed.RDS")
microbiome_cnt_scl = readRDS("./Data/AP/microbiome_processed.RDS")
taxonomy_processed = readRDS("./Data/AP/taxonomy_processed.RDS")
USV = svd(microbiome_cnt_scl)
plot(1:length(USV$d), USV$d)
scores = USV$u %*% diag(USV$d)
loadings = USV$v
prepMode1 = processedGeorgiou$mode1 %>% mutate(Component_1 = scores[,1], Component_2 = scores[,2]) %>% arrange(PainS_NopainA, SubjectID) %>% mutate(index=1:nrow(.))
processedGeorgiou = readRDS("./Data/AP/cytokines_homogenized.RDS")
microbiome_cnt_scl = readRDS("./Data/AP/microbiome_homogenized.RDS")
taxonomy_processed = readRDS("./Data/AP/taxonomy_homogenized.RDS")
USV = svd(microbiome_cnt_scl)
plot(1:length(USV$d), USV$d)
scores = USV$u %*% diag(USV$d)
loadings = USV$v
prepMode1 = processedGeorgiou$mode1 %>% mutate(Component_1 = scores[,1], Component_2 = scores[,2]) %>% arrange(PainS_NopainA, SubjectID) %>% mutate(index=1:nrow(.))
prepMode2 = taxonomy_processed %>% mutate(Component_1 = loadings[,1], Component_2 = loadings[,2]) %>% arrange(V2, V8) %>% mutate(index=1:nrow(.))
a = prepMode1 %>% ggplot(aes(x=index,y=Component_1,fill=as.factor(PainS_NopainA))) + geom_bar(stat="identity")
b = prepMode2 %>% as_tibble() %>% ggplot(aes(x=index,y=Component_1,fill=as.factor(V2))) + geom_bar(stat="identity")
c = prepMode1 %>% ggplot(aes(x=index,y=Component_2,fill=as.factor(PainS_NopainA))) + geom_bar(stat="identity")
d = prepMode2 %>% as_tibble() %>% ggplot(aes(x=index,y=Component_2,fill=as.factor(V2))) + geom_bar(stat="identity")
ggarrange(a,b,c,d)
Xhat = tcrossprod(scores[,c(1,2)],loadings[,c(1,2)])
varExp = sum(Xhat^2) / sum(microbiome_cnt_scl^2)
cytokines_meta_data = read.csv("./Data/AP/input_deduplicated_metadata_RvdP.csv", sep=" ", header=FALSE) %>% as_tibble()
colnames(cytokines_meta_data) = c("SubjectID", "Visit", "Gender", "Age", "Pain_noPain", "case_control")
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
timepoints = c(-6, -3, 0, 1, 6, 13)
normalSubjectLoadings = prepMode1 %>% as_tibble() %>% left_join(otherMeta, by="SubjectID")
uncorrectedP = matrix(NA, nrow=2, ncol=4)
# Gender
uncorrectedP[1,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender=="M") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(Gender=="F") %>% select(Component_1) %>% pull())$p.value
uncorrectedP[2,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender=="M") %>% select(Component_2) %>% pull(), normalSubjectLoadings %>% filter(Gender=="F") %>% select(Component_2) %>% pull())$p.value
# Age
uncorrectedP[1,2] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$Age.x)$p.value
uncorrectedP[2,2] = cor.test(normalSubjectLoadings$Component_2, normalSubjectLoadings$Age.x)$p.value
# DMFT
uncorrectedP[1,3] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$DMFT)$p.value
uncorrectedP[2,3] = cor.test(normalSubjectLoadings$Component_2, normalSubjectLoadings$DMFT)$p.value
# pain-noPain
uncorrectedP[1,4] = wilcox.test(normalSubjectLoadings %>% filter(PainS_NopainA.x=="S") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(PainS_NopainA.x=="A") %>% select(Component_1) %>% pull())$p.value
uncorrectedP[2,4] = wilcox.test(normalSubjectLoadings %>% filter(PainS_NopainA.x=="S") %>% select(Component_2) %>% pull(), normalSubjectLoadings %>% filter(PainS_NopainA.x=="A") %>% select(Component_2) %>% pull())$p.value
print(uncorrectedP)
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=2, ncol=4)
print(correctedP)
varExp
