saveRDS(modelTongue, "./Models/NPLS/TIFN_tongue_NPLS.RDS")
Y = processedLowling$mode1 %>% left_join(rf_data %>% filter(day==14) %>% select(subject, Area_delta_R30) %>% unique()) %>% select(Area_delta_R30) %>% pull()
Ycnt = Y - mean(Y)
result = NPLStoolbox::ncrossreg(processedLowling$data, Ycnt)
result
modelLowling = NPLStoolbox::triPLS1(processedLowling$data, Ycnt, 1)
saveRDS(modelLowling, "./Models/NPLS/TIFN_lowling_NPLS.RDS")
Y = processedLowinter$mode1 %>% left_join(rf_data %>% filter(day==14) %>% select(subject, Area_delta_R30) %>% unique()) %>% select(Area_delta_R30) %>% pull()
Ycnt = Y - mean(Y)
result = NPLStoolbox::ncrossreg(processedLowinter$data, Ycnt)
result
modelLowinter = NPLStoolbox::triPLS1(processedLowinter$data, Ycnt, 1)
saveRDS(modelLowinter, "./Models/NPLS/TIFN_lowinter_NPLS.RDS")
Y = processedUpling$mode1 %>% left_join(rf_data %>% filter(day==14) %>% select(subject, Area_delta_R30) %>% unique()) %>% select(Area_delta_R30) %>% pull()
Ycnt = Y - mean(Y)
result = NPLStoolbox::ncrossreg(processedUpling$data, Ycnt)
result
modelUpling = NPLStoolbox::triPLS1(processedUpling$data, Ycnt, 1)
saveRDS(modelUpling, "./Models/NPLS/TIFN_upling_NPLS.RDS")
Y = processedUpinter$mode1 %>% left_join(rf_data %>% filter(day==14) %>% select(subject, Area_delta_R30) %>% unique()) %>% select(Area_delta_R30) %>% pull()
Ycnt = Y - mean(Y)
result = NPLStoolbox::ncrossreg(processedUpinter$data, Ycnt)
result
modelUpinter = NPLStoolbox::triPLS1(processedUpinter$data, Ycnt, 1)
saveRDS(modelUpinter, "./Models/NPLS/TIFN_upinter_NPLS.RDS")
Y = processedSaliva$mode1 %>% left_join(rf_data %>% filter(day==14) %>% select(subject, Area_delta_R30) %>% unique()) %>% select(Area_delta_R30) %>% pull()
Ycnt = Y - mean(Y)
result = NPLStoolbox::ncrossreg(processedSaliva$data, Ycnt)
result
modelSaliva = NPLStoolbox::triPLS1(processedSaliva$data, Ycnt, 1)
saveRDS(modelSaliva, "./Models/NPLS/TIFN_saliva_NPLS.RDS")
Y = processedMetabolomics$mode1 %>% left_join(rf_data %>% filter(day==14) %>% select(subject, Area_delta_R30) %>% unique()) %>% select(Area_delta_R30) %>% pull()
Ycnt = Y - mean(Y)
result = NPLStoolbox::ncrossreg(processedMetabolomics$data, Ycnt)
result
modelMetabolomics = NPLStoolbox::triPLS1(processedMetabolomics$data, Ycnt, 1)
saveRDS(modelMetabolomics, "./Models/NPLS/TIFN_metabolomics_NPLS.RDS")
model = modelTongue
obj = processedTongue
Fac = model$Fac
normalSubjectLoadings = cbind(model$Fac[[1]], obj$mode1) %>% as_tibble()
transformedSubjectLoadings = transformPARAFACloadings(Fac, 2, moreOutput=TRUE)$Ftilde %>% as_tibble() %>% mutate(subject = rep(obj$mode1$subject, each=7), day = rep(c(-14,0,2,5,9,14,21),41))
uncorrectedP = matrix(0L, nrow=1, ncol=5)
# Plaque%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, plaquepercent))
uncorrectedP[1,1] = cor.test(temp$V1, temp$plaquepercent, method="pearson")$p.value
# uncorrectedP[2,1] = cor.test(temp$V2, temp$plaquepercent, method="pearson")$p.value
# Bleeding%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, bomppercent))
uncorrectedP[1,2] = cor.test(temp$V1, temp$bomppercent, method="pearson")$p.value
# uncorrectedP[2,2] = cor.test(temp$V2, temp$bomppercent, method="pearson")$p.value
# RF%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, Area_delta_R30))
uncorrectedP[1,3] = cor.test(temp$V1, temp$Area_delta_R30, method="pearson")$p.value
# uncorrectedP[2,3] = cor.test(temp$V2, temp$Area_delta_R30, method="pearson")$p.value
# Gender
partA = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==1)
partB = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==2)
uncorrectedP[1,4] = t.test(partA$`Comp. 1`, partB$`Comp. 1`)$p.value # Not what I would do nowadays, but this is what is in the TIFN paper
partA
model = modelTongue
obj = processedTongue
Fac = model$Fac
normalSubjectLoadings = cbind(model$Fac[[1]], obj$mode1) %>% as_tibble()
transformedSubjectLoadings = transformPARAFACloadings(Fac, 2, moreOutput=TRUE)$Ftilde %>% as_tibble() %>% mutate(subject = rep(obj$mode1$subject, each=7), day = rep(c(-14,0,2,5,9,14,21),41))
uncorrectedP = matrix(0L, nrow=1, ncol=5)
# Plaque%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, plaquepercent))
uncorrectedP[1,1] = cor.test(temp$V1, temp$plaquepercent, method="pearson")$p.value
# uncorrectedP[2,1] = cor.test(temp$V2, temp$plaquepercent, method="pearson")$p.value
# Bleeding%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, bomppercent))
uncorrectedP[1,2] = cor.test(temp$V1, temp$bomppercent, method="pearson")$p.value
# uncorrectedP[2,2] = cor.test(temp$V2, temp$bomppercent, method="pearson")$p.value
# RF%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, Area_delta_R30))
uncorrectedP[1,3] = cor.test(temp$V1, temp$Area_delta_R30, method="pearson")$p.value
# uncorrectedP[2,3] = cor.test(temp$V2, temp$Area_delta_R30, method="pearson")$p.value
# Gender
partA = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==1)
partB = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==2)
uncorrectedP[1,4] = t.test(partA$`model$Fac[[1]]`, partB$`model$Fac[[1]]`)$p.value # Not what I would do nowadays, but this is what is in the TIFN paper
# uncorrectedP[2,4] = t.test(partA$`2`, partB$`2`)$p.value
# Age
temp = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,age)
uncorrectedP[1,5] = cor.test(temp$`model$Fac[[1]]`, temp$age, method="pearson")$p.value
# uncorrectedP[2,5] = cor.test(temp$`2`, temp$age, method="pearson")$p.value
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=1, ncol=5)
correctedP
model = modelTongue
obj = processedTongue
Fac = model$Fac
normalSubjectLoadings = cbind(model$Fac[[1]], obj$mode1) %>% as_tibble()
transformedSubjectLoadings = transformPARAFACloadings(Fac, 2, moreOutput=TRUE)$Ftilde %>% as_tibble() %>% mutate(subject = rep(obj$mode1$subject, each=7), day = rep(c(-14,0,2,5,9,14,21),41))
uncorrectedP = matrix(0L, nrow=1, ncol=5)
# Plaque%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, plaquepercent))
uncorrectedP[1,1] = cor.test(temp$V1, temp$plaquepercent, method="pearson")$p.value
# uncorrectedP[2,1] = cor.test(temp$V2, temp$plaquepercent, method="pearson")$p.value
# Bleeding%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, bomppercent))
uncorrectedP[1,2] = cor.test(temp$V1, temp$bomppercent, method="pearson")$p.value
# uncorrectedP[2,2] = cor.test(temp$V2, temp$bomppercent, method="pearson")$p.value
# RF%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, Area_delta_R30))
uncorrectedP[1,3] = cor.test(temp$V1, temp$Area_delta_R30, method="pearson")$p.value
# uncorrectedP[2,3] = cor.test(temp$V2, temp$Area_delta_R30, method="pearson")$p.value
# Gender
partA = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==1)
partB = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==2)
uncorrectedP[1,4] = t.test(partA$`model$Fac[[1]]`, partB$`model$Fac[[1]]`)$p.value # Not what I would do nowadays, but this is what is in the TIFN paper
# uncorrectedP[2,4] = t.test(partA$`2`, partB$`2`)$p.value
# Age
temp = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,age)
uncorrectedP[1,5] = cor.test(temp$`model$Fac[[1]]`, temp$age, method="pearson")$p.value
# uncorrectedP[2,5] = cor.test(temp$`2`, temp$age, method="pearson")$p.value
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=1, ncol=5)
correctedP
modelTongue$varExpX
modelTongue$varExpY
model = modelLowling
obj = processedLowling
Fac = model$Fac
normalSubjectLoadings = cbind(model$Fac[[1]], obj$mode1) %>% as_tibble()
transformedSubjectLoadings = transformPARAFACloadings(Fac, 2, moreOutput=TRUE)$Ftilde %>% as_tibble() %>% mutate(subject = rep(obj$mode1$subject, each=7), day = rep(c(-14,0,2,5,9,14,21),41))
uncorrectedP = matrix(0L, nrow=1, ncol=5)
# Plaque%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, plaquepercent))
uncorrectedP[1,1] = cor.test(temp$V1, temp$plaquepercent, method="pearson")$p.value
# uncorrectedP[2,1] = cor.test(temp$V2, temp$plaquepercent, method="pearson")$p.value
# Bleeding%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, bomppercent))
uncorrectedP[1,2] = cor.test(temp$V1, temp$bomppercent, method="pearson")$p.value
# uncorrectedP[2,2] = cor.test(temp$V2, temp$bomppercent, method="pearson")$p.value
# RF%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, Area_delta_R30))
uncorrectedP[1,3] = cor.test(temp$V1, temp$Area_delta_R30, method="pearson")$p.value
# uncorrectedP[2,3] = cor.test(temp$V2, temp$Area_delta_R30, method="pearson")$p.value
# Gender
partA = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==1)
partB = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==2)
uncorrectedP[1,4] = t.test(partA$`Comp. 1`, partB$`Comp. 1`)$p.value # Not what I would do nowadays, but this is what is in the TIFN paper
model = modelLowling
obj = processedLowling
Fac = model$Fac
normalSubjectLoadings = cbind(model$Fac[[1]], obj$mode1) %>% as_tibble()
transformedSubjectLoadings = transformPARAFACloadings(Fac, 2, moreOutput=TRUE)$Ftilde %>% as_tibble() %>% mutate(subject = rep(obj$mode1$subject, each=7), day = rep(c(-14,0,2,5,9,14,21),41))
uncorrectedP = matrix(0L, nrow=1, ncol=5)
# Plaque%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, plaquepercent))
uncorrectedP[1,1] = cor.test(temp$V1, temp$plaquepercent, method="pearson")$p.value
# uncorrectedP[2,1] = cor.test(temp$V2, temp$plaquepercent, method="pearson")$p.value
# Bleeding%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, bomppercent))
uncorrectedP[1,2] = cor.test(temp$V1, temp$bomppercent, method="pearson")$p.value
# uncorrectedP[2,2] = cor.test(temp$V2, temp$bomppercent, method="pearson")$p.value
# RF%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, Area_delta_R30))
uncorrectedP[1,3] = cor.test(temp$V1, temp$Area_delta_R30, method="pearson")$p.value
# uncorrectedP[2,3] = cor.test(temp$V2, temp$Area_delta_R30, method="pearson")$p.value
# Gender
partA = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==1)
partB = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==2)
uncorrectedP[1,4] = t.test(partA$`model$Fac[[1]]`, partB$`model$Fac[[1]]`)$p.value # Not what I would do nowadays, but this is what is in the TIFN paper
# uncorrectedP[2,4] = t.test(partA$`2`, partB$`2`)$p.value
# Age
temp = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,age)
uncorrectedP[1,5] = cor.test(temp$`model$Fac[[1]]`, temp$age, method="pearson")$p.value
# uncorrectedP[2,5] = cor.test(temp$`2`, temp$age, method="pearson")$p.value
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=1, ncol=5)
correctedP
model = modelLowling
obj = processedLowling
Fac = model$Fac
normalSubjectLoadings = cbind(model$Fac[[1]], obj$mode1) %>% as_tibble()
transformedSubjectLoadings = transformPARAFACloadings(Fac, 2, moreOutput=TRUE)$Ftilde %>% as_tibble() %>% mutate(subject = rep(obj$mode1$subject, each=7), day = rep(c(-14,0,2,5,9,14,21),41))
uncorrectedP = matrix(0L, nrow=1, ncol=5)
# Plaque%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, plaquepercent))
uncorrectedP[1,1] = cor.test(temp$V1, temp$plaquepercent, method="pearson")$p.value
# uncorrectedP[2,1] = cor.test(temp$V2, temp$plaquepercent, method="pearson")$p.value
# Bleeding%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, bomppercent))
uncorrectedP[1,2] = cor.test(temp$V1, temp$bomppercent, method="pearson")$p.value
# uncorrectedP[2,2] = cor.test(temp$V2, temp$bomppercent, method="pearson")$p.value
# RF%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, Area_delta_R30))
uncorrectedP[1,3] = cor.test(temp$V1, temp$Area_delta_R30, method="pearson")$p.value
# uncorrectedP[2,3] = cor.test(temp$V2, temp$Area_delta_R30, method="pearson")$p.value
# Gender
partA = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==1)
partB = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==2)
uncorrectedP[1,4] = t.test(partA$`model$Fac[[1]]`, partB$`model$Fac[[1]]`)$p.value # Not what I would do nowadays, but this is what is in the TIFN paper
# uncorrectedP[2,4] = t.test(partA$`2`, partB$`2`)$p.value
# Age
temp = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,age)
uncorrectedP[1,5] = cor.test(temp$`model$Fac[[1]]`, temp$age, method="pearson")$p.value
# uncorrectedP[2,5] = cor.test(temp$`2`, temp$age, method="pearson")$p.value
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=1, ncol=5)
correctedP
modelLowling$varExpX
modelLowling$varExpY
model = modelLowinter
obj = processedLowinter
Fac = model$Fac
normalSubjectLoadings = cbind(model$Fac[[1]], obj$mode1) %>% as_tibble()
transformedSubjectLoadings = transformPARAFACloadings(Fac, 2, moreOutput=TRUE)$Ftilde %>% as_tibble() %>% mutate(subject = rep(obj$mode1$subject, each=7), day = rep(c(-14,0,2,5,9,14,21),41))
uncorrectedP = matrix(0L, nrow=1, ncol=5)
# Plaque%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, plaquepercent))
uncorrectedP[1,1] = cor.test(temp$V1, temp$plaquepercent, method="pearson")$p.value
# uncorrectedP[2,1] = cor.test(temp$V2, temp$plaquepercent, method="pearson")$p.value
# Bleeding%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, bomppercent))
uncorrectedP[1,2] = cor.test(temp$V1, temp$bomppercent, method="pearson")$p.value
# uncorrectedP[2,2] = cor.test(temp$V2, temp$bomppercent, method="pearson")$p.value
# RF%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, Area_delta_R30))
uncorrectedP[1,3] = cor.test(temp$V1, temp$Area_delta_R30, method="pearson")$p.value
# uncorrectedP[2,3] = cor.test(temp$V2, temp$Area_delta_R30, method="pearson")$p.value
# Gender
partA = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==1)
partB = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==2)
uncorrectedP[1,4] = t.test(partA$`model$Fac[[1]]`, partB$`model$Fac[[1]]`)$p.value # Not what I would do nowadays, but this is what is in the TIFN paper
# uncorrectedP[2,4] = t.test(partA$`2`, partB$`2`)$p.value
# Age
temp = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,age)
uncorrectedP[1,5] = cor.test(temp$`model$Fac[[1]]`, temp$age, method="pearson")$p.value
# uncorrectedP[2,5] = cor.test(temp$`2`, temp$age, method="pearson")$p.value
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=1, ncol=5)
correctedP
modelLowinter$varExpX
modelLowinter$varExpY
model = modelUpling
obj = processedUpling
Fac = model$Fac
normalSubjectLoadings = cbind(model$Fac[[1]], obj$mode1) %>% as_tibble()
transformedSubjectLoadings = transformPARAFACloadings(Fac, 2, moreOutput=TRUE)$Ftilde %>% as_tibble() %>% mutate(subject = rep(obj$mode1$subject, each=7), day = rep(c(-14,0,2,5,9,14,21),41))
uncorrectedP = matrix(0L, nrow=1, ncol=5)
# Plaque%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, plaquepercent))
uncorrectedP[1,1] = cor.test(temp$V1, temp$plaquepercent, method="pearson")$p.value
# uncorrectedP[2,1] = cor.test(temp$V2, temp$plaquepercent, method="pearson")$p.value
# Bleeding%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, bomppercent))
uncorrectedP[1,2] = cor.test(temp$V1, temp$bomppercent, method="pearson")$p.value
# uncorrectedP[2,2] = cor.test(temp$V2, temp$bomppercent, method="pearson")$p.value
# RF%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, Area_delta_R30))
uncorrectedP[1,3] = cor.test(temp$V1, temp$Area_delta_R30, method="pearson")$p.value
# uncorrectedP[2,3] = cor.test(temp$V2, temp$Area_delta_R30, method="pearson")$p.value
# Gender
partA = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==1)
partB = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==2)
uncorrectedP[1,4] = t.test(partA$`model$Fac[[1]]`, partB$`model$Fac[[1]]`)$p.value # Not what I would do nowadays, but this is what is in the TIFN paper
# uncorrectedP[2,4] = t.test(partA$`2`, partB$`2`)$p.value
# Age
temp = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,age)
uncorrectedP[1,5] = cor.test(temp$`model$Fac[[1]]`, temp$age, method="pearson")$p.value
# uncorrectedP[2,5] = cor.test(temp$`2`, temp$age, method="pearson")$p.value
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=1, ncol=5)
correctedP
modelUpling$varExpX
modelUpling$varExpY
model = modelUpinter
obj = processedUpinter
Fac = model$Fac
normalSubjectLoadings = cbind(model$Fac[[1]], obj$mode1) %>% as_tibble()
transformedSubjectLoadings = transformPARAFACloadings(Fac, 2, moreOutput=TRUE)$Ftilde %>% as_tibble() %>% mutate(subject = rep(obj$mode1$subject, each=7), day = rep(c(-14,0,2,5,9,14,21),41))
uncorrectedP = matrix(0L, nrow=1, ncol=5)
# Plaque%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, plaquepercent))
uncorrectedP[1,1] = cor.test(temp$V1, temp$plaquepercent, method="pearson")$p.value
# uncorrectedP[2,1] = cor.test(temp$V2, temp$plaquepercent, method="pearson")$p.value
# Bleeding%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, bomppercent))
uncorrectedP[1,2] = cor.test(temp$V1, temp$bomppercent, method="pearson")$p.value
# uncorrectedP[2,2] = cor.test(temp$V2, temp$bomppercent, method="pearson")$p.value
# RF%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, Area_delta_R30))
uncorrectedP[1,3] = cor.test(temp$V1, temp$Area_delta_R30, method="pearson")$p.value
# uncorrectedP[2,3] = cor.test(temp$V2, temp$Area_delta_R30, method="pearson")$p.value
# Gender
partA = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==1)
partB = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==2)
uncorrectedP[1,4] = t.test(partA$`model$Fac[[1]]`, partB$`model$Fac[[1]]`)$p.value # Not what I would do nowadays, but this is what is in the TIFN paper
# uncorrectedP[2,4] = t.test(partA$`2`, partB$`2`)$p.value
# Age
temp = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,age)
uncorrectedP[1,5] = cor.test(temp$`model$Fac[[1]]`, temp$age, method="pearson")$p.value
# uncorrectedP[2,5] = cor.test(temp$`2`, temp$age, method="pearson")$p.value
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=1, ncol=5)
correctedP
modelUpinter$varExpX
modelUpinter$varExpY
model = modelSaliva
obj = processedSaliva
Fac = model$Fac
normalSubjectLoadings = cbind(model$Fac[[1]], obj$mode1) %>% as_tibble()
transformedSubjectLoadings = transformPARAFACloadings(Fac, 2, moreOutput=TRUE)$Ftilde %>% as_tibble() %>% mutate(subject = rep(obj$mode1$subject, each=7), day = rep(c(-14,0,2,5,9,14,21),41))
uncorrectedP = matrix(0L, nrow=1, ncol=5)
# Plaque%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, plaquepercent))
uncorrectedP[1,1] = cor.test(temp$V1, temp$plaquepercent, method="pearson")$p.value
# uncorrectedP[2,1] = cor.test(temp$V2, temp$plaquepercent, method="pearson")$p.value
# Bleeding%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, bomppercent))
uncorrectedP[1,2] = cor.test(temp$V1, temp$bomppercent, method="pearson")$p.value
# uncorrectedP[2,2] = cor.test(temp$V2, temp$bomppercent, method="pearson")$p.value
# RF%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, Area_delta_R30))
uncorrectedP[1,3] = cor.test(temp$V1, temp$Area_delta_R30, method="pearson")$p.value
# uncorrectedP[2,3] = cor.test(temp$V2, temp$Area_delta_R30, method="pearson")$p.value
# Gender
partA = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==1)
partB = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==2)
uncorrectedP[1,4] = t.test(partA$`model$Fac[[1]]`, partB$`model$Fac[[1]]`)$p.value # Not what I would do nowadays, but this is what is in the TIFN paper
# uncorrectedP[2,4] = t.test(partA$`2`, partB$`2`)$p.value
# Age
temp = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,age)
uncorrectedP[1,5] = cor.test(temp$`model$Fac[[1]]`, temp$age, method="pearson")$p.value
# uncorrectedP[2,5] = cor.test(temp$`2`, temp$age, method="pearson")$p.value
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=1, ncol=5)
correctedP
model = modelSaliva
obj = processedSaliva
Fac = model$Fac
normalSubjectLoadings = cbind(model$Fac[[1]], obj$mode1) %>% as_tibble()
transformedSubjectLoadings = transformPARAFACloadings(Fac, 2, moreOutput=TRUE)$Ftilde %>% as_tibble() %>% mutate(subject = rep(obj$mode1$subject, each=7), day = rep(c(-14,0,2,5,9,14,21),41))
uncorrectedP = matrix(0L, nrow=1, ncol=5)
# Plaque%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, plaquepercent))
uncorrectedP[1,1] = cor.test(temp$V1, temp$plaquepercent, method="pearson")$p.value
# uncorrectedP[2,1] = cor.test(temp$V2, temp$plaquepercent, method="pearson")$p.value
# Bleeding%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, bomppercent))
uncorrectedP[1,2] = cor.test(temp$V1, temp$bomppercent, method="pearson")$p.value
# uncorrectedP[2,2] = cor.test(temp$V2, temp$bomppercent, method="pearson")$p.value
# RF%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, Area_delta_R30))
uncorrectedP[1,3] = cor.test(temp$V1, temp$Area_delta_R30, method="pearson")$p.value
# uncorrectedP[2,3] = cor.test(temp$V2, temp$Area_delta_R30, method="pearson")$p.value
# Gender
partA = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==1)
partB = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==2)
uncorrectedP[1,4] = t.test(partA$`model$Fac[[1]]`, partB$`model$Fac[[1]]`)$p.value # Not what I would do nowadays, but this is what is in the TIFN paper
# uncorrectedP[2,4] = t.test(partA$`2`, partB$`2`)$p.value
# Age
temp = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,age)
uncorrectedP[1,5] = cor.test(temp$`model$Fac[[1]]`, temp$age, method="pearson")$p.value
# uncorrectedP[2,5] = cor.test(temp$`2`, temp$age, method="pearson")$p.value
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=1, ncol=5)
correctedP
modelSaliva$varExpX
modelSaliva$varExpY
model = modelMetabolomics
obj = processedMetabolomics
Fac = model$Fac
normalSubjectLoadings = cbind(model$Fac[[1]], obj$mode1) %>% as_tibble()
transformedSubjectLoadings = transformPARAFACloadings(Fac, 2, moreOutput=TRUE)$Ftilde %>% as_tibble() %>% mutate(subject = rep(obj$mode1$subject, each=5), day = rep(c(0,2,5,9,14),40))
uncorrectedP = matrix(0L, nrow=1, ncol=5)
# Plaque%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, plaquepercent))
uncorrectedP[1,1] = cor.test(temp$V1, temp$plaquepercent, method="pearson")$p.value
# uncorrectedP[2,1] = cor.test(temp$V2, temp$plaquepercent, method="pearson")$p.value
# Bleeding%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, bomppercent))
uncorrectedP[1,2] = cor.test(temp$V1, temp$bomppercent, method="pearson")$p.value
# uncorrectedP[2,2] = cor.test(temp$V2, temp$bomppercent, method="pearson")$p.value
# RF%
temp=transformedSubjectLoadings %>% left_join(rf_data %>% select(subject, day, Area_delta_R30))
uncorrectedP[1,3] = cor.test(temp$V1, temp$Area_delta_R30, method="pearson")$p.value
# uncorrectedP[2,3] = cor.test(temp$V2, temp$Area_delta_R30, method="pearson")$p.value
# Gender
partA = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==1)
partB = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,gender) %>% filter(gender==2)
uncorrectedP[1,4] = t.test(partA$`model$Fac[[1]]`, partB$`model$Fac[[1]]`)$p.value # Not what I would do nowadays, but this is what is in the TIFN paper
# uncorrectedP[2,4] = t.test(partA$`2`, partB$`2`)$p.value
# Age
temp = normalSubjectLoadings %>% left_join(age_gender) %>% select(1,2,age)
uncorrectedP[1,5] = cor.test(temp$`model$Fac[[1]]`, temp$age, method="pearson")$p.value
# uncorrectedP[2,5] = cor.test(temp$`2`, temp$age, method="pearson")$p.value
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=1, ncol=5)
correctedP
modelMetabolomics$varExpX
modelMetabolomics$varExpY
library(ggplot2)
library(parafac4microbiome)
processedGeorgiou = readRDS("./Data/AP/cytokines_processed.RDS")
mode1 = read.csv("./Models/NPLS/AP/AP_mode1.csv", header=FALSE)
library(ggplot2)
library(parafac4microbiome)
processedGeorgiou = readRDS("./Data/AP/cytokines_processed.RDS")
Y = as.numeric(as.factor(processedGeorgiou$mode1$PainS_NopainA))
Ycnt = Y - mean(Y)
result = NPLStoolbox::ncrossreg(processedGeorgiou$data, Ycnt)
Ycnt
processedGeorgiou = readRDS("./Data/AP/cytokines_processed.RDS")
processedGeorgiou
processedGeorgiou$mode1
processedGeorgiou
library(ggplot2)
library(parafac4microbiome)
processedGeorgiou = readRDS("./Data/AP/cytokines_processed.RDS")
processedGeorgiou$data
processedGeorgiou$mode1
Y = as.numeric(as.factor(processedGeorgiou$mode1$PainS_NopainA))
Ycnt = Y - mean(Y)
Ycnt
processedGeorgiou$mode1$PainS_NopainA
Y = as.numeric(as.factor(processedGeorgiou$mode1$case_control))
Ycnt = Y - mean(Y)
Ycnt
result = NPLStoolbox::ncrossreg(processedGeorgiou$data, Ycnt)
result
model = NPLStoolbox::triPLS1(processedGeorgiou$data, Ycnt, 1)
saveRDS(model, "./Models/NPLS/AP_cytokine_NPLS.RDS")
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
timepoints = c(-6, -3, 0, 1, 6, 13)
normalSubjectLoadings = prepMode1 %>% as_tibble() %>% left_join(cytokines_meta_data) %>% left_join(otherMeta,by="SubjectID")
cbind(model$Fac[[1]], processedGeorgiou$mode1)
cbind(model$Fac[[1]], processedGeorgiou$mode1)%>% as_tibble()
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
timepoints = c(-6, -3, 0, 1, 6, 13)
normalSubjectLoadings = cbind(model$Fac[[1]], processedGeorgiou$mode1)%>% as_tibble() %>% left_join(cytokines_meta_data) %>% left_join(otherMeta,by="SubjectID")
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
timepoints = c(-6, -3, 0, 1, 6, 13)
normalSubjectLoadings = cbind(model$Fac[[1]], processedGeorgiou$mode1)%>% as_tibble() %>% left_join(otherMeta,by="SubjectID")
uncorrectedP = matrix(NA, nrow=1, ncol=4)
# Gender
uncorrectedP[1,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender=="M") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(Gender=="F") %>% select(Component_1) %>% pull())$p.value
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
timepoints = c(-6, -3, 0, 1, 6, 13)
normalSubjectLoadings = processedGeorgiou$mode1 %>% mutate(Component_1 = model$Fac[[1]][,1]) %>% left_join(otherMeta,by="SubjectID")
uncorrectedP = matrix(NA, nrow=1, ncol=4)
# Gender
uncorrectedP[1,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender=="M") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(Gender=="F") %>% select(Component_1) %>% pull())$p.value
# uncorrectedP[2,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender=="M") %>% select(Component_2) %>% pull(), normalSubjectLoadings %>% filter(Gender=="F") %>% select(Component_2) %>% pull())$p.value
# Age
uncorrectedP[1,2] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$Age.x)$p.value
# uncorrectedP[2,2] = cor.test(normalSubjectLoadings$Component_2, normalSubjectLoadings$Age)$p.value
# DMFT
uncorrectedP[1,3] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$DMFT)$p.value
# uncorrectedP[2,3] = cor.test(normalSubjectLoadings$Component_2, normalSubjectLoadings$DMFT)$p.value
# pain-noPain
uncorrectedP[1,4] = wilcox.test(normalSubjectLoadings %>% filter(PainS_NopainA.x=="Symptomatic") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(PainS_NopainA.x=="Asymptomatic") %>% select(Component_1) %>% pull())$p.value
normalSubjectLoadings %>% filter(PainS_NopainA.x=="Symptomatic")
normalSubjectLoadings %>% filter(PainS_NopainA.x=="S")
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
timepoints = c(-6, -3, 0, 1, 6, 13)
normalSubjectLoadings = processedGeorgiou$mode1 %>% mutate(Component_1 = model$Fac[[1]][,1]) %>% left_join(otherMeta,by="SubjectID")
uncorrectedP = matrix(NA, nrow=1, ncol=4)
# Gender
uncorrectedP[1,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender=="M") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(Gender=="F") %>% select(Component_1) %>% pull())$p.value
# uncorrectedP[2,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender=="M") %>% select(Component_2) %>% pull(), normalSubjectLoadings %>% filter(Gender=="F") %>% select(Component_2) %>% pull())$p.value
# Age
uncorrectedP[1,2] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$Age.x)$p.value
# uncorrectedP[2,2] = cor.test(normalSubjectLoadings$Component_2, normalSubjectLoadings$Age)$p.value
# DMFT
uncorrectedP[1,3] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$DMFT)$p.value
# uncorrectedP[2,3] = cor.test(normalSubjectLoadings$Component_2, normalSubjectLoadings$DMFT)$p.value
# pain-noPain
uncorrectedP[1,4] = wilcox.test(normalSubjectLoadings %>% filter(PainS_NopainA.x=="S") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(PainS_NopainA.x=="A") %>% select(Component_1) %>% pull())$p.value
# uncorrectedP[2,4] = wilcox.test(normalSubjectLoadings %>% filter(PainS_NopainA=="S") %>% select(Component_2) %>% pull(), normalSubjectLoadings %>% filter(PainS_NopainA=="A") %>% select(Component_2) %>% pull())$p.value
print(uncorrectedP)
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=1, ncol=4)
print(correctedP)
model$varExpX
model$varExpY
normalSubjectLoadings$case_control
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
timepoints = c(-6, -3, 0, 1, 6, 13)
normalSubjectLoadings = processedGeorgiou$mode1 %>% mutate(Component_1 = model$Fac[[1]][,1]) %>% left_join(otherMeta,by="SubjectID")
uncorrectedP = matrix(NA, nrow=1, ncol=5)
# Gender
uncorrectedP[1,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender=="M") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(Gender=="F") %>% select(Component_1) %>% pull())$p.value
# uncorrectedP[2,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender=="M") %>% select(Component_2) %>% pull(), normalSubjectLoadings %>% filter(Gender=="F") %>% select(Component_2) %>% pull())$p.value
# Age
uncorrectedP[1,2] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$Age.x)$p.value
# uncorrectedP[2,2] = cor.test(normalSubjectLoadings$Component_2, normalSubjectLoadings$Age)$p.value
# DMFT
uncorrectedP[1,3] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$DMFT)$p.value
# uncorrectedP[2,3] = cor.test(normalSubjectLoadings$Component_2, normalSubjectLoadings$DMFT)$p.value
# pain-noPain
uncorrectedP[1,4] = wilcox.test(normalSubjectLoadings %>% filter(PainS_NopainA.x=="S") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(PainS_NopainA.x=="A") %>% select(Component_1) %>% pull())$p.value
# uncorrectedP[2,4] = wilcox.test(normalSubjectLoadings %>% filter(PainS_NopainA=="S") %>% select(Component_2) %>% pull(), normalSubjectLoadings %>% filter(PainS_NopainA=="A") %>% select(Component_2) %>% pull())$p.value
# Case/control
uncorrectedP[1,5] = wilcox.test(normalSubjectLoadings %>% filter(case_control=="case") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(case_control=="control") %>% select(Component_1) %>% pull())$p.value
print(uncorrectedP)
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=1, ncol=4)
print(correctedP)
otherMeta = read.csv("./Data/AP/Root_meta_data_parafac.txt", sep="\t") %>% as_tibble() %>% select(-Gender)
timepoints = c(-6, -3, 0, 1, 6, 13)
normalSubjectLoadings = processedGeorgiou$mode1 %>% mutate(Component_1 = model$Fac[[1]][,1]) %>% left_join(otherMeta,by="SubjectID")
uncorrectedP = matrix(NA, nrow=1, ncol=5)
# Gender
uncorrectedP[1,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender=="M") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(Gender=="F") %>% select(Component_1) %>% pull())$p.value
# uncorrectedP[2,1] = wilcox.test(normalSubjectLoadings %>% filter(Gender=="M") %>% select(Component_2) %>% pull(), normalSubjectLoadings %>% filter(Gender=="F") %>% select(Component_2) %>% pull())$p.value
# Age
uncorrectedP[1,2] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$Age.x)$p.value
# uncorrectedP[2,2] = cor.test(normalSubjectLoadings$Component_2, normalSubjectLoadings$Age)$p.value
# DMFT
uncorrectedP[1,3] = cor.test(normalSubjectLoadings$Component_1, normalSubjectLoadings$DMFT)$p.value
# uncorrectedP[2,3] = cor.test(normalSubjectLoadings$Component_2, normalSubjectLoadings$DMFT)$p.value
# pain-noPain
uncorrectedP[1,4] = wilcox.test(normalSubjectLoadings %>% filter(PainS_NopainA.x=="S") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(PainS_NopainA.x=="A") %>% select(Component_1) %>% pull())$p.value
# uncorrectedP[2,4] = wilcox.test(normalSubjectLoadings %>% filter(PainS_NopainA=="S") %>% select(Component_2) %>% pull(), normalSubjectLoadings %>% filter(PainS_NopainA=="A") %>% select(Component_2) %>% pull())$p.value
# Case/control
uncorrectedP[1,5] = wilcox.test(normalSubjectLoadings %>% filter(case_control=="case") %>% select(Component_1) %>% pull(), normalSubjectLoadings %>% filter(case_control=="control") %>% select(Component_1) %>% pull())$p.value
print(uncorrectedP)
correctedP = matrix(p.adjust(uncorrectedP, "BH"), nrow=1, ncol=5)
print(correctedP)
